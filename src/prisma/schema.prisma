generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id                      Int                   @id @default(autoincrement())
  firstName               String?               @map("first_name") @db.VarChar(30)
  middleName              String?               @map("middle_name") @db.VarChar(30)
  lastName                String?               @map("last_name") @db.VarChar(30)
  preferredName           String?               @map("preferred_name") @db.VarChar(30)
  email                   String?               @unique
  mobile                  String?               @db.VarChar(30)
  landline                String?               @db.VarChar(30)
  ageGroup                String?               @map("age_group") @db.VarChar(10)
  membershipType          String?               @map("membership_type") @db.VarChar(10)
  membershipNumber        Int?                  @map("membership_number")
  subscriptionYear        Int?                  @default(0) @map("membership_year")
  bmfaNumber              Int?                  @map("bmfa_number")
  flyerId                 String?               @map("flyer_id")
  operatorId              String?               @map("operator_id")
  addressId               Int?                  @map("address_id")
  leadFamilyMemberId      Int?                  @map("lead_family_member_id")
  nonClubContact          Boolean?              @map("non_club_contact")
  bmfaThroughClub         Boolean?              @map("bmfa_through_club")
  caaThroughClub          Boolean?              @map("caa_through_club")
  flyerIdRequired         Boolean?              @map("flyer_id_required")
  operatorIdRequired      Boolean?              @map("operator_id_required")
  bmfaMembersCardRequired Boolean?              @default(false) @map("bmfa_members_card_required") @db.Boolean
  confirmed               Boolean               @default(false) @db.Boolean
  createdAt               DateTime              @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt               DateTime              @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)
  memberAchievements      MemberAchievement[]   @relation(map: "FK_member_achievement_member_id")
  address                 Address?              @relation(fields: [addressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_member_address_id")
  memberCommitteeRoles    MemberCommitteeRole[] @relation(map: "FK_member_committee_role_member_id")
  memberSubscriptions     MemberSubscription[]  @relation(map: "FK_member_subscription_member_id")
  family                  Family[]              @relation(map: "FK_family_member_id")

  @@map("member")
}

model Family {
  familyMemberId     Int    @map("family_member_id")
  leadFamilyMemberId Int    @map("lead_family_member_id")
  familyMember       Member @relation(fields: [familyMemberId], references: [id])

  @@id([familyMemberId, leadFamilyMemberId])
  @@map("family_member")
}

model Address {
  id           Int      @id @default(autoincrement())
  addressLine1 String?  @map("address_line_1") @db.VarChar(50)
  addressLine2 String?  @map("address_line_2") @db.VarChar(50)
  town         String?  @db.VarChar(30)
  county       String?  @db.VarChar(30)
  postcode     String?  @db.VarChar(10)
  createdAt    DateTime @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)
  members      Member[] @relation(map: "FK_member_address_id")

  @@map("address")
}

model AchievementCategory {
  id            Int           @id @default(autoincrement())
  title         String?       @db.VarChar(40)
  isEndorsement Boolean       @default(false) @map("is_endorsement") @db.Boolean
  createdAt     DateTime      @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt     DateTime      @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)
  achievements  Achievement[] @relation(map: "FK_achievement_achievement_category_id")

  @@map("achievement_category")
}

model Achievement {
  id                    Int                  @id @default(autoincrement())
  title                 String?              @db.VarChar(40)
  code                  String?              @db.VarChar(10)
  achievementCategoryId Int?                 @map("achievement_category_id")
  createdAt             DateTime             @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt             DateTime             @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)
  achievementCategory   AchievementCategory? @relation(fields: [achievementCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_achievement_achievement_category_id")
  memberAchievements    MemberAchievement[]  @relation(map: "FK_member_achievement_achievement_id")

  @@map("achievement")
}

model CommitteeRole {
  id                   Int                   @id @default(autoincrement())
  title                String                @db.VarChar(40)
  createdAt            DateTime              @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt            DateTime              @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)
  memberCommitteeRoles MemberCommitteeRole[] @relation(map: "FK_member_comittee_role_comittee_role_id")

  @@map("committee_role")
}

model MemberCommitteeRole {
  memberId        Int           @map("member_id")
  member          Member        @relation(fields: [memberId], references: [id])
  committeeRoleId Int           @map("committee_role_id")
  committeeRole   CommitteeRole @relation(fields: [committeeRoleId], references: [id])
  createdAt       DateTime      @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime      @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@id([memberId, committeeRoleId])
  @@map("member_committee_role")
}

model MemberAchievement {
  memberId      Int         @map("member_id")
  member        Member      @relation(fields: [memberId], references: [id])
  achievementId Int         @map("achievement_id")
  achievement   Achievement @relation(fields: [achievementId], references: [id])
  createdAt     DateTime    @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt     DateTime    @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@id([memberId, achievementId])
  @@map("member_achievement")
}

model Subscription {
  year                    Int                  @id
  clubSenior              Int                  @default(0) @map("club_senior")
  clubJunior              Int                  @default(0) @map("club_junior")
  clubFamilySenior        Int                  @default(0) @map("club_family_senior")
  clubFamilyPartner       Int                  @default(0) @map("club_family_partner")
  clubFamilyJunior        Int                  @default(0) @map("club_family_junior")
  bmfaSenior              Int                  @default(0) @map("bmfa_senior")
  bmfaJunior              Int                  @default(0) @map("bmfa_junior")
  bmfaFamilyPartner       Int                  @default(0) @map("bmfa_family_partner")
  bmfaFamilyJunior        Int                  @default(0) @map("bmfa_family_junior")
  bmfaNonFlyer            Int                  @default(0) @map("bmfa_non_flyer")
  caaOperatorRegistration Int                  @default(0) @map("caa_operator_registration")
  bmfaMembersCard         Int                  @default(0) @map("bmfa_members_card")
  available               Boolean              @default(false) @db.Boolean
  createdAt               DateTime             @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt               DateTime             @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)
  memberSubscriptions     MemberSubscription[] @relation(map: "FK_member_subscription_subscription_year")

  @@map("subscription")
}

model MemberSubscription {
  memberId                Int          @map("member_id")
  member                  Member       @relation(fields: [memberId], references: [id])
  subscriptionYear        Int          @map("subscription_year")
  subscription            Subscription @relation(fields: [subscriptionYear], references: [year])
  clubSenior              Int          @default(0) @map("club_senior")
  clubJunior              Int          @default(0) @map("club_junior")
  clubFamilySenior        Int          @default(0) @map("club_family_senior")
  clubFamilyPartner       Int          @default(0) @map("club_family_partner")
  clubFamilyJunior        Int          @default(0) @map("club_family_junior")
  bmfaSenior              Int          @default(0) @map("bmfa_senior")
  bmfaJunior              Int          @default(0) @map("bmfa_junior")
  bmfaFamilyPartner       Int          @default(0) @map("bmfa_family_partner")
  bmfaFamilyJunior        Int          @default(0) @map("bmfa_family_junior")
  bmfaNonFlyer            Int          @default(0) @map("bmfa_non_flyer")
  caaOperatorRegistration Int          @default(0) @map("caa_operator_registration")
  bmfaMembersCard         Int          @default(0) @map("bmfa_members_card")
  amountPaid              Int          @default(0) @map("amount_paid")
  paymentMethod           String?      @map("payment_method")
  confirmed               Boolean      @default(false) @db.Boolean
  createdAt               DateTime     @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @map("created_at") @db.Timestamp(6)
  updatedAt               DateTime     @default(dbgenerated("('now'::text)::timestamp(6) with time zone")) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@id([memberId, subscriptionYear])
  @@map("member_subscription")
}
